name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  code-check:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'  # Ensuring compatibility

      - name: Initialize Go Modules
        working-directory: backend
        run: |
          go mod init url-shortener || true  # Avoids error if already initialized
          go mod tidy
          go mod verify

      - name: Run Static Code Analysis (GoLint)
        working-directory: backend
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./... || true  # Ignores lint warnings but logs them

      - name: Run Go Vet (Find Potential Issues)
        working-directory: backend
        run: go vet ./...

      - name: Run Tests
        working-directory: backend
        run: go test ./...

  build:
    name: Build & Push Docker Image
    needs: code-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build Go App
        working-directory: backend
        run: go build -o url-shortener .

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/url-shortener:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/url-shortener:latest
